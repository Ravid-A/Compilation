Useless nonterminals

   matched_stmt


Useless rules

   21 matched_stmt: IF EXPR matched_stmt ELSE matched_stmt
   22             | other_stmt


State 13 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: if_stmt

    2 stmt: if_stmt
    3     | other_stmt

    4 if_stmt: IF EXPR stmt
    5        | IF EXPR stmt ELSE stmt

    6 EXPR: LPAREN expr RPAREN

    7 expr: value EQ value
    8     | value NE value
    9     | value LT value
   10     | value LE value
   11     | value GT value
   12     | value GE value

   13 stmt_block: '{' stmt_list '}'

   14 stmt_list: stmt_list stmt
   15          | stmt

   16 other_stmt: assignment
   17           | stmt_block

   18 assignment: ID ASSIGN value SEMICOLON

   19 value: INT_LIT
   20      | ID


Terminals, with rules where they appear

$end (0) 0
'{' (123) 13
'}' (125) 13
error (256)
INT_LIT (258) 19
ID (259) 18 20
IF (260) 4 5
ELSE (261) 5
LPAREN (262) 6
RPAREN (263) 6
SEMICOLON (264) 18
GE (265) 12
GT (266) 11
LE (267) 10
LT (268) 9
NE (269) 8
EQ (270) 7
ASSIGN (271) 18


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
start (20)
    on left: 1, on right: 0
stmt (21)
    on left: 2 3, on right: 4 5 14 15
if_stmt (22)
    on left: 4 5, on right: 1 2
EXPR (23)
    on left: 6, on right: 4 5
expr (24)
    on left: 7 8 9 10 11 12, on right: 6
stmt_block (25)
    on left: 13, on right: 17
stmt_list (26)
    on left: 14 15, on right: 13 14
other_stmt (27)
    on left: 16 17, on right: 3
assignment (28)
    on left: 18, on right: 16
value (29)
    on left: 19 20, on right: 7 8 9 10 11 12 18


state 0

    0 $accept: . start $end

    IF  shift, and go to state 1

    start    go to state 2
    if_stmt  go to state 3


state 1

    4 if_stmt: IF . EXPR stmt
    5        | IF . EXPR stmt ELSE stmt

    LPAREN  shift, and go to state 4

    EXPR  go to state 5


state 2

    0 $accept: start . $end

    $end  shift, and go to state 6


state 3

    1 start: if_stmt .

    $default  reduce using rule 1 (start)


state 4

    6 EXPR: LPAREN . expr RPAREN

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    expr   go to state 9
    value  go to state 10


state 5

    4 if_stmt: IF EXPR . stmt
    5        | IF EXPR . stmt ELSE stmt

    ID   shift, and go to state 11
    IF   shift, and go to state 1
    '{'  shift, and go to state 12

    stmt        go to state 13
    if_stmt     go to state 14
    stmt_block  go to state 15
    other_stmt  go to state 16
    assignment  go to state 17


state 6

    0 $accept: start $end .

    $default  accept


state 7

   19 value: INT_LIT .

    $default  reduce using rule 19 (value)


state 8

   20 value: ID .

    $default  reduce using rule 20 (value)


state 9

    6 EXPR: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 18


state 10

    7 expr: value . EQ value
    8     | value . NE value
    9     | value . LT value
   10     | value . LE value
   11     | value . GT value
   12     | value . GE value

    GE  shift, and go to state 19
    GT  shift, and go to state 20
    LE  shift, and go to state 21
    LT  shift, and go to state 22
    NE  shift, and go to state 23
    EQ  shift, and go to state 24


state 11

   18 assignment: ID . ASSIGN value SEMICOLON

    ASSIGN  shift, and go to state 25


state 12

   13 stmt_block: '{' . stmt_list '}'

    ID   shift, and go to state 11
    IF   shift, and go to state 1
    '{'  shift, and go to state 12

    stmt        go to state 26
    if_stmt     go to state 14
    stmt_block  go to state 15
    stmt_list   go to state 27
    other_stmt  go to state 16
    assignment  go to state 17


state 13

    4 if_stmt: IF EXPR stmt .
    5        | IF EXPR stmt . ELSE stmt

    ELSE  shift, and go to state 28

    ELSE      [reduce using rule 4 (if_stmt)]
    $default  reduce using rule 4 (if_stmt)


state 14

    2 stmt: if_stmt .

    $default  reduce using rule 2 (stmt)


state 15

   17 other_stmt: stmt_block .

    $default  reduce using rule 17 (other_stmt)


state 16

    3 stmt: other_stmt .

    $default  reduce using rule 3 (stmt)


state 17

   16 other_stmt: assignment .

    $default  reduce using rule 16 (other_stmt)


state 18

    6 EXPR: LPAREN expr RPAREN .

    $default  reduce using rule 6 (EXPR)


state 19

   12 expr: value GE . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 29


state 20

   11 expr: value GT . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 30


state 21

   10 expr: value LE . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 31


state 22

    9 expr: value LT . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 32


state 23

    8 expr: value NE . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 33


state 24

    7 expr: value EQ . value

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 34


state 25

   18 assignment: ID ASSIGN . value SEMICOLON

    INT_LIT  shift, and go to state 7
    ID       shift, and go to state 8

    value  go to state 35


state 26

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


state 27

   13 stmt_block: '{' stmt_list . '}'
   14 stmt_list: stmt_list . stmt

    ID   shift, and go to state 11
    IF   shift, and go to state 1
    '{'  shift, and go to state 12
    '}'  shift, and go to state 36

    stmt        go to state 37
    if_stmt     go to state 14
    stmt_block  go to state 15
    other_stmt  go to state 16
    assignment  go to state 17


state 28

    5 if_stmt: IF EXPR stmt ELSE . stmt

    ID   shift, and go to state 11
    IF   shift, and go to state 1
    '{'  shift, and go to state 12

    stmt        go to state 38
    if_stmt     go to state 14
    stmt_block  go to state 15
    other_stmt  go to state 16
    assignment  go to state 17


state 29

   12 expr: value GE value .

    $default  reduce using rule 12 (expr)


state 30

   11 expr: value GT value .

    $default  reduce using rule 11 (expr)


state 31

   10 expr: value LE value .

    $default  reduce using rule 10 (expr)


state 32

    9 expr: value LT value .

    $default  reduce using rule 9 (expr)


state 33

    8 expr: value NE value .

    $default  reduce using rule 8 (expr)


state 34

    7 expr: value EQ value .

    $default  reduce using rule 7 (expr)


state 35

   18 assignment: ID ASSIGN value . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 36

   13 stmt_block: '{' stmt_list '}' .

    $default  reduce using rule 13 (stmt_block)


state 37

   14 stmt_list: stmt_list stmt .

    $default  reduce using rule 14 (stmt_list)


state 38

    5 if_stmt: IF EXPR stmt ELSE stmt .

    $default  reduce using rule 5 (if_stmt)


state 39

   18 assignment: ID ASSIGN value SEMICOLON .

    $default  reduce using rule 18 (assignment)
